ggplot(aes(x=datetf2, y= Entropy)) +
geom_point() +
labs(x = "Date",
y = "Entropy",
title = "Entropy over time",
subtitle="US Churches") +
stat_summary(fun.y = "mean", colour = "red", size = 2, geom = "line")
d<- data %>%
group_by(grp) %>%
summarise_at(vars(month,year), funs(mean(., na.rm=TRUE)))
d<- data %>%
group_by(Denomination) %>%
summarise_at(vars(month,year), funs(mean(., na.rm=TRUE)))
d<- data[data$Denom==123] %>%
#group_by(Denomination) %>%
summarise_at(vars(month,year), funs(mean(., na.rm=TRUE)))
d <- data[data$Denom==123]
d <- data[data$Denom==123,]
d<- data %>%
#group_by(Denomination) %>%
summarise_at(vars(month,year), funs(mean(., na.rm=TRUE)))
View(d)
d <- data[data$Denom==123,]
d<- data %>%
group_by(c(month,year))
d <- data[data$Denom==123,]
d<- d %>%
group_by(c(month,year))
d <- data[data$Denom==123,]
aggregate( Entropy ~ month + year , d , mean )
timeseriesdf <- function(data, subsetvar, subsetval,target){
d <- data[data$subsetvar==subsetval,]
dsub<- aggregate( target ~ month + year , d , mean )
return(dsub)
}
timeseriesdf(data,Denom,123,Entropy)
timeseriesdf(data=data,subsetvar=Denom,subsetval=123,target=Entropy)
timeseriesdf(data=data,subsetvar=Denom,subsetval=123,target=Entropy)
timeseriesdf <- function(data, tarDenom,target){
d <- data[data$Denom==tarDenom,]
dsub<- aggregate( target ~ month + year , d , mean )
return(dsub)
}
timeseriesdf(data,123,Entropy)
timeseriesdf <- function(data, tarDenom,target){
d <- data[data$Denom==tarDenom,]
dsub<- aggregate( Entropy ~ month + year , d , mean )
return(dsub)
}
timeseriesdf <- function(data, tarDenom){
d <- data[data$Denom==tarDenom,]
dsub<- aggregate( Entropy ~ month + year , d , mean )
return(dsub)
}
timeseriesdf(data,123)
unemployment = read.csv('D:/Sermon Analysis/unemployment-by-county-us/output.csv', stringsAsFactors=FALSE)
# Now get averages by state per year
library(data.table)
data_unemployment <- setDT(unemployment)[, .(avg_unemployment = mean(Rate)) , by = .(Year, Month, State)]
data_unemployment <- as.data.frame(data_unemployment)
names(data_unemployment)[names(data_unemployment) == "Year"] <- "year"
names(data_unemployment)[names(data_unemployment) == "Month"] <- "month"
# drop factors in data_unemployment
#data_unemployment <- droplevels(data_unemployment)
#data_unemployment$month <- droplevels(data_unemployment$month)
data_unemployment$month[data_unemployment$month=="Janurary"] <- 1
data_unemployment$month[data_unemployment$month=="February"] <- 2
data_unemployment$month[data_unemployment$month=="March"] <- 3
data_unemployment$month[data_unemployment$month=="April"] <- 4
data_unemployment$month[data_unemployment$month=="May"] <- 5
data_unemployment$month[data_unemployment$month=="June"] <- 6
data_unemployment$month[data_unemployment$month=="July"] <- 7
data_unemployment$month[data_unemployment$month=="August"] <- 8
data_unemployment$month[data_unemployment$month=="September"] <- 9
data_unemployment$month[data_unemployment$month=="October"] <- 10
data_unemployment$month[data_unemployment$month=="November"] <- 11
data_unemployment$month[data_unemployment$month=="December"] <- 12
# Now convert States
# import the state dataframe
library(readxl)
stateabbrevs = read_excel('D:/Sermon Analysis/state2abbrev.xlsx')
for (i in 1:dim(stateabbrevs)[1]){
data_unemployment$State[data_unemployment$State==stateabbrevs$stateProv[i]] <- stateabbrevs$Code[i]
#stateabbrevs$Code[i]
#stateabbrevs$stateProv[i]
}
data_unemployment$month <- as.numeric(data_unemployment$month)
# now add the average unemployment rate to the sermon dataframe
data <- data %>% right_join(data_unemployment, by=c("year", "month", "State"))
denom_entropy_timeseries <- function(data, tarDenom){
d <- data[data$Denom==tarDenom,]
dsub<- aggregate( Entropy ~ month + year , d , mean )
return(dsub)
}
church_entropy_timeseries <- function(data, tarChurch){
d <- data[data$Church==tarChurch,]
dsub<- aggregate( Entropy ~ month + year , d , mean )
return(dsub)
}
state_entropy_timeseries <- function(data, tarState){
d <- data[data$State==tarState,]
dsub<- aggregate( Entropy ~ month + year , d , mean )
return(dsub)
}
state_unemployment_timeseries <- function(data, tarState){
d <- data[data$State==tarState,]
dsub<- aggregate( avg_unemployment ~ month + year , d , mean )
return(dsub)
}
state_unemployment_timeseries(data,"MS")
unemp <- state_unemployment_timeseries(data,tarstate)
tarstate <- "MS"
unemp <- state_unemployment_timeseries(data,tarstate)
entr <- state_entropy_timeseries(data,tarstate)
unemp_entropy_data <- unemp %>% right_join(entr, by=c("year", "month"))
unemp_entropy_data
unemp_entropy_timseries <- function(data,tarstate){
unemp <- state_unemployment_timeseries(data,tarstate)
entr <- state_entropy_timeseries(data,tarstate)
unemp_entropy_data <- unemp %>% right_join(entr, by=c("year", "month"))
return(unemp_entropy_data)
}
library(roll)
install.packages("roll")
data2testrolling <- unemp_entropy_timseries(data,"MS")
roll_cor(data2testrolling$avg_unemployment,data2testrolling$Entropy)
# rolling correlations
library(roll)
roll_cor(data2testrolling$avg_unemployment,data2testrolling$Entropy)
roll_cor(data2testrolling$avg_unemployment,data2testrolling$Entropy,width = 5)
rollcorrdata <- roll_cor(data2testrolling$avg_unemployment,data2testrolling$Entropy,width = 12)
plot(rollcorrdata)
data2testrolling <- unemp_entropy_timseries(data,"MS")
rollcorrdata <- roll_cor(data2testrolling$avg_unemployment,data2testrolling$Entropy,width = 4)
plot(rollcorrdata)
rollcorrdata <- roll_cor(data2testrolling$avg_unemployment,data2testrolling$Entropy,width = 6)
plot(rollcorrdata)
rollcorrdata <- roll_cor(data2testrolling$avg_unemployment,data2testrolling$Entropy,width = 12)
plot(rollcorrdata)
rollcorrdata <- roll_cor(data2testrolling$avg_unemployment,data2testrolling$Entropy,width = 24)
plot(rollcorrdata)
plot(rollcorrdata,xlab="time",ylab="correlation")
unemp_entropy_timseries
unemp_entropy_data$datetf2 <- as.Date(with(unemp_entropy_data, paste(year, month,sep="-")), "%Y-%B")
unemp_entropy_data$datetf2 <- paste(unemp_entropy_data$month, unemp_entropy_data$year,sep="-")
unemp_entropy_data$datetf2 <- as.yearmon(unemp_entropy_data$datetf2, "%m-%Y")
View(unemp_entropy_data)
unemp_entropy_timseries <- function(data,tarstate){
unemp <- state_unemployment_timeseries(data,tarstate)
entr <- state_entropy_timeseries(data,tarstate)
unemp_entropy_data <- unemp %>% right_join(entr, by=c("year", "month"))
unemp_entropy_data$datetf2 <- paste(unemp_entropy_data$month, unemp_entropy_data$year,sep="-")
unemp_entropy_data$datetf2 <- as.yearmon(unemp_entropy_data$datetf2, "%m-%Y")
return(unemp_entropy_data)
}
data2testrolling <- unemp_entropy_timseries(data,"MS")
rollcorrdata <- roll_cor(data2testrolling$avg_unemployment,data2testrolling$Entropy,width = 24)
plot(rollcorrdata,xlab="time",ylab="correlation",labels=data2testrolling$datetf2)
plot(rollcorrdata,xlab="time",ylab="correlation",at=data2testrolling$datetf2)
plot(rollcorrdata,xlab="time",ylab="correlation",at=data2testrolling$datetf2,labels=data2testrolling$year)
plot(rollcorrdata,xlab="time",ylab="correlation",at=data2testrolling$datetf2,labels=data2testrolling$datetf2)
rollcorrdata
data2testrolling$rollcorr <- rollcorrdata
plot(data2testrolling$datetf2,data2testrolling$rollcorr,xaxt="n")
axis.POSIXct(1, at=data2testrolling$datetf2, labels=format(data2testrolling$datetf2, "%m-%Y"))
plot(rollcorrdata,xlab="time",ylab="correlation",at=data2testrolling$datetf2,labels=data2testrolling$datetf2)
plot(rollcorr ~ datetf2, data2testrolling, xaxt = "n")
axis.POSIXct(1, at=data2testrolling$datetf2, by="month"), format="%b %Y")
plot(rollcorr ~ datetf2, data2testrolling, xaxt = "n")
axis.POSIXct(1, at=data2testrolling$datetf2, by="month"))
plot(rollcorr ~ datetf2, data2testrolling, xaxt = "n")
axis.POSIXct(1, at=data2testrolling$datetf2, by="month")
plot(rollcorr ~ datetf2, data2testrolling, xaxt = "n")
axis.POSIXct(1, at=data2testrolling$datetf2)
plot(rollcorr ~ datetf2, data2testrolling, xaxt = "n")
plot(rollcorr ~ datetf2, data2testrolling, xaxt = "n")
axis.POSIXct(1, at=data2testrolling$datetf2)
plot(rollcorr ~ datetf2, data2testrolling, xaxt = "n")
axis.POSIXct(1, label=data2testrolling$datetf2)
library(ggplot2)
library(dplyr)
# Dummy data
data <- data.frame(
day = as.Date("2017-06-14") - 0:364,
value = runif(365) + seq(-140, 224)^2 / 10000
)
# Most basic bubble plot
p <- ggplot(data, aes(x=day, y=value)) +
geom_line() +
xlab("")
p
p <- ggplot(data2testrolling, aes(x=datetf2, y=rollcorr)) +
geom_line() +
xlab("")
p
# get rolling STD just to see
roll_sd(data2testrolling$Entropy)
# get rolling STD just to see
roll_sd(data2testrolling$Entropy,width=4)
# get rolling STD just to see
rollstddata <- roll_sd(data2testrolling$Entropy,width=4)
plot(rollstddata)
data2testrolling <- unemp_entropy_timseries(data,"MS")
rollcorrdata <- roll_cor(data2testrolling$avg_unemployment,data2testrolling$Entropy,width = 24)
data2testrolling$rollcorr <- rollcorrdata
#allso rolling std
data2testrolling$std_entropy <- roll_sd(data2testrolling$Entropy,width=24)
data2testrolling <- unemp_entropy_timseries(data,"MS")
p <- ggplot(data2testrolling, aes(x=datetf2, y=rollcorr)) +
geom_line() +
xlab("")
p
# Most basic plot
p <- ggplot(data2testrolling, aes(x=datetf2, y=std_entropy)) +
geom_line() +
xlab("")
p
data2testrolling <- unemp_entropy_timseries(data,"AL")
denom_entropy_timeseries <- function(data, tarDenom){
d <- data[data$Denom==tarDenom,]
dsub<- aggregate( Entropy ~ month + year , d , mean )
return(dsub)
}
church_entropy_timeseries <- function(data, tarChurch){
d <- data[data$Church==tarChurch,]
dsub<- aggregate( Entropy ~ month + year , d , mean )
return(dsub)
}
state_entropy_timeseries <- function(data, tarState){
d <- data[data$State==tarState,]
dsub<- aggregate( Entropy ~ month + year , d , mean )
return(dsub)
}
state_unemployment_timeseries <- function(data, tarState){
d <- data[data$State==tarState,]
dsub<- aggregate( avg_unemployment ~ month + year , d , mean )
return(dsub)
}
unemp_entropy_timseries <- function(data,tarstate){
unemp <- state_unemployment_timeseries(data,tarstate)
entr <- state_entropy_timeseries(data,tarstate)
unemp_entropy_data <- unemp %>% right_join(entr, by=c("year", "month"))
unemp_entropy_data$datetf2 <- paste(unemp_entropy_data$month, unemp_entropy_data$year,sep="-")
unemp_entropy_data$datetf2 <- as.yearmon(unemp_entropy_data$datetf2, "%m-%Y")
return(unemp_entropy_data)
}
# Now pull in unemployment data
unemployment = read.csv('D:/Sermon Analysis/unemployment-by-county-us/output.csv', stringsAsFactors=FALSE)
# Now get averages by state per year
library(data.table)
data_unemployment <- setDT(unemployment)[, .(avg_unemployment = mean(Rate)) , by = .(Year, Month, State)]
data_unemployment <- as.data.frame(data_unemployment)
names(data_unemployment)[names(data_unemployment) == "Year"] <- "year"
names(data_unemployment)[names(data_unemployment) == "Month"] <- "month"
# drop factors in data_unemployment
#data_unemployment <- droplevels(data_unemployment)
#data_unemployment$month <- droplevels(data_unemployment$month)
data_unemployment$month[data_unemployment$month=="Janurary"] <- 1
data_unemployment$month[data_unemployment$month=="February"] <- 2
data_unemployment$month[data_unemployment$month=="March"] <- 3
data_unemployment$month[data_unemployment$month=="April"] <- 4
data_unemployment$month[data_unemployment$month=="May"] <- 5
data_unemployment$month[data_unemployment$month=="June"] <- 6
data_unemployment$month[data_unemployment$month=="July"] <- 7
data_unemployment$month[data_unemployment$month=="August"] <- 8
data_unemployment$month[data_unemployment$month=="September"] <- 9
data_unemployment$month[data_unemployment$month=="October"] <- 10
data_unemployment$month[data_unemployment$month=="November"] <- 11
data_unemployment$month[data_unemployment$month=="December"] <- 12
# Now convert States
# import the state dataframe
library(readxl)
stateabbrevs = read_excel('D:/Sermon Analysis/state2abbrev.xlsx')
for (i in 1:dim(stateabbrevs)[1]){
data_unemployment$State[data_unemployment$State==stateabbrevs$stateProv[i]] <- stateabbrevs$Code[i]
#stateabbrevs$Code[i]
#stateabbrevs$stateProv[i]
}
data_unemployment$month <- as.numeric(data_unemployment$month)
# now add the average unemployment rate to the sermon dataframe
data <- data %>% right_join(data_unemployment, by=c("year", "month", "State"))
data = read.csv('D:/Sermon Analysis/Sermons_US_ALLDATA 20171026.csv', stringsAsFactors = FALSE)
library(zoo)
data$datetf2 <- as.yearmon(data$Date, "%B %Y")
# Now pull in unemployment data
unemployment = read.csv('D:/Sermon Analysis/unemployment-by-county-us/output.csv', stringsAsFactors=FALSE)
# Now get averages by state per year
library(data.table)
data_unemployment <- setDT(unemployment)[, .(avg_unemployment = mean(Rate)) , by = .(Year, Month, State)]
data_unemployment <- as.data.frame(data_unemployment)
names(data_unemployment)[names(data_unemployment) == "Year"] <- "year"
names(data_unemployment)[names(data_unemployment) == "Month"] <- "month"
# drop factors in data_unemployment
#data_unemployment <- droplevels(data_unemployment)
#data_unemployment$month <- droplevels(data_unemployment$month)
data_unemployment$month[data_unemployment$month=="Janurary"] <- 1
data_unemployment$month[data_unemployment$month=="February"] <- 2
data_unemployment$month[data_unemployment$month=="March"] <- 3
data_unemployment$month[data_unemployment$month=="April"] <- 4
data_unemployment$month[data_unemployment$month=="May"] <- 5
data_unemployment$month[data_unemployment$month=="June"] <- 6
data_unemployment$month[data_unemployment$month=="July"] <- 7
data_unemployment$month[data_unemployment$month=="August"] <- 8
data_unemployment$month[data_unemployment$month=="September"] <- 9
data_unemployment$month[data_unemployment$month=="October"] <- 10
data_unemployment$month[data_unemployment$month=="November"] <- 11
data_unemployment$month[data_unemployment$month=="December"] <- 12
# Now convert States
# import the state dataframe
library(readxl)
stateabbrevs = read_excel('D:/Sermon Analysis/state2abbrev.xlsx')
for (i in 1:dim(stateabbrevs)[1]){
data_unemployment$State[data_unemployment$State==stateabbrevs$stateProv[i]] <- stateabbrevs$Code[i]
#stateabbrevs$Code[i]
#stateabbrevs$stateProv[i]
}
data_unemployment$month <- as.numeric(data_unemployment$month)
# now add the average unemployment rate to the sermon dataframe
data <- data %>% right_join(data_unemployment, by=c("year", "month", "State"))
data2testrolling <- unemp_entropy_timseries(data,"AL")
rollcorrdata <- roll_cor(data2testrolling$avg_unemployment,data2testrolling$Entropy,width = 24)
data2testrolling$rollcorr <- rollcorrdata
#allso rolling std
data2testrolling$std_entropy <- roll_sd(data2testrolling$Entropy,width=24)
#also rolling avg
data2testrolling$mean_entropy <- roll_mean(data2testrolling$Entropy,width=24)
# Most basic plot
p <- ggplot(data2testrolling, aes(x=datetf2, y=std_entropy)) +
geom_line() +
xlab("")
p
p <- ggplot(data2testrolling, aes(x=datetf2, y=mean_entropy)) +
geom_line() +
xlab("")
p
p <- ggplot(data2testrolling, aes(x=datetf2, y=rollcorr)) +
geom_line() +
xlab("")
p
p <- ggplot(data2testrolling, aes(x=datetf2, y=std_entropy)) +
geom_line() +
xlab("")
p
data2testrolling <- unemp_entropy_timseries(data,"TX")
rollcorrdata <- roll_cor(data2testrolling$avg_unemployment,data2testrolling$Entropy,width = 24)
data2testrolling$rollcorr <- rollcorrdata
#allso rolling std
data2testrolling$std_entropy <- roll_sd(data2testrolling$Entropy,width=24)
#also rolling avg
data2testrolling$mean_entropy <- roll_mean(data2testrolling$Entropy,width=24)
#plot(rollcorrdata,xlab="time",ylab="correlation",at=data2testrolling$datetf2,labels=data2testrolling$datetf2)
# Most basic plot
p <- ggplot(data2testrolling, aes(x=datetf2, y=std_entropy)) +
geom_line() +
xlab("")
p
data2testrolling <- unemp_entropy_timseries(data,"VA")
rollcorrdata <- roll_cor(data2testrolling$avg_unemployment,data2testrolling$Entropy,width = 24)
data2testrolling$rollcorr <- rollcorrdata
#allso rolling std
data2testrolling$std_entropy <- roll_sd(data2testrolling$Entropy,width=24)
#also rolling avg
data2testrolling$mean_entropy <- roll_mean(data2testrolling$Entropy,width=24)
#plot(rollcorrdata,xlab="time",ylab="correlation",at=data2testrolling$datetf2,labels=data2testrolling$datetf2)
# Most basic plot
p <- ggplot(data2testrolling, aes(x=datetf2, y=std_entropy)) +
geom_line() +
xlab("")
p
unemp <- aggregate( avg_unemployment ~ month + year , data , mean )
entr <- aggregate( Entropy ~ month + year , data , mean )
unemp_entropy_data <- unemp %>% right_join(entr, by=c("year", "month"))
unemp_entropy_data$datetf2 <- paste(unemp_entropy_data$month, unemp_entropy_data$year,sep="-")
unemp_entropy_data$datetf2 <- as.yearmon(unemp_entropy_data$datetf2, "%m-%Y")
# or for the whole dataset
data2testrolling <- unemp_entropy_timseries(data)
state_unemp_entropy_timseries <- function(data,tarstate){
unemp <- state_unemployment_timeseries(data,tarstate)
entr <- state_entropy_timeseries(data,tarstate)
unemp_entropy_data <- unemp %>% right_join(entr, by=c("year", "month"))
unemp_entropy_data$datetf2 <- paste(unemp_entropy_data$month, unemp_entropy_data$year,sep="-")
unemp_entropy_data$datetf2 <- as.yearmon(unemp_entropy_data$datetf2, "%m-%Y")
return(unemp_entropy_data)
}
unemp_entropy_timseries <- function(data){
unemp <- aggregate( avg_unemployment ~ month + year , data , mean )
entr <- aggregate( Entropy ~ month + year , data , mean )
unemp_entropy_data <- unemp %>% right_join(entr, by=c("year", "month"))
unemp_entropy_data$datetf2 <- paste(unemp_entropy_data$month, unemp_entropy_data$year,sep="-")
unemp_entropy_data$datetf2 <- as.yearmon(unemp_entropy_data$datetf2, "%m-%Y")
return(unemp_entropy_data)
}
data2testrolling <- state_unemp_entropy_timseries(data,"VA")
# or for the whole dataset
data2testrolling <- unemp_entropy_timseries(data)
rollcorrdata <- roll_cor(data2testrolling$avg_unemployment,data2testrolling$Entropy,width = 24)
data2testrolling$rollcorr <- rollcorrdata
#allso rolling std
data2testrolling$std_entropy <- roll_sd(data2testrolling$Entropy,width=24)
#also rolling avg
data2testrolling$mean_entropy <- roll_mean(data2testrolling$Entropy,width=24)
# Most basic plot
p <- ggplot(data2testrolling, aes(x=datetf2, y=std_entropy)) +
geom_line() +
xlab("")
p
p <- ggplot(data2testrolling, aes(x=datetf2, y=mean_entropy)) +
geom_line() +
xlab("")
p
p <- ggplot(data2testrolling, aes(x=datetf2, y=rollcorr)) +
geom_line() +
xlab("")
p
# also median
data2testrolling$median_entropy <- roll_median(data2testrolling$Entropy,width=24)
p <- ggplot(data2testrolling, aes(x=datetf2, y=median_entropy)) +
geom_line() +
xlab("")
p
data2testrolling <- state_unemp_entropy_timseries(data,"CA")
rollcorrdata <- roll_cor(data2testrolling$avg_unemployment,data2testrolling$Entropy,width = 24)
data2testrolling$rollcorr <- rollcorrdata
#allso rolling std
data2testrolling$std_entropy <- roll_sd(data2testrolling$Entropy,width=24)
#also rolling avg
data2testrolling$mean_entropy <- roll_mean(data2testrolling$Entropy,width=24)
# also median
data2testrolling$median_entropy <- roll_median(data2testrolling$Entropy,width=24)
#plot(rollcorrdata,xlab="time",ylab="correlation",at=data2testrolling$datetf2,labels=data2testrolling$datetf2)
p <- ggplot(data2testrolling, aes(x=datetf2, y=mean_entropy)) +
geom_line() +
xlab("")
p
data2testrolling <- state_unemp_entropy_timseries(data,"AZ")
# or for the whole dataset
#data2testrolling <- unemp_entropy_timseries(data)
data2testrolling$rollcorr <- roll_cor(data2testrolling$avg_unemployment,data2testrolling$Entropy,width = 24)
#allso rolling std
data2testrolling$std_entropy <- roll_sd(data2testrolling$Entropy,width=24)
#also rolling avg
data2testrolling$mean_entropy <- roll_mean(data2testrolling$Entropy,width=24)
# also median
data2testrolling$median_entropy <- roll_median(data2testrolling$Entropy,width=24)
#plot(rollcorrdata,xlab="time",ylab="correlation",at=data2testrolling$datetf2,labels=data2testrolling$datetf2)
# Most basic plot
p <- ggplot(data2testrolling, aes(x=datetf2, y=mean_entropy)) +
geom_line() +
xlab("")
p
data2testrolling <- state_unemp_entropy_timseries(data,"MD")
# or for the whole dataset
#data2testrolling <- unemp_entropy_timseries(data)
data2testrolling$rollcorr <- roll_cor(data2testrolling$avg_unemployment,data2testrolling$Entropy,width = 24)
#allso rolling std
data2testrolling$std_entropy <- roll_sd(data2testrolling$Entropy,width=24)
#also rolling avg
data2testrolling$mean_entropy <- roll_mean(data2testrolling$Entropy,width=24)
# also median
data2testrolling$median_entropy <- roll_median(data2testrolling$Entropy,width=24)
#plot(rollcorrdata,xlab="time",ylab="correlation",at=data2testrolling$datetf2,labels=data2testrolling$datetf2)
# Most basic plot
p <- ggplot(data2testrolling, aes(x=datetf2, y=mean_entropy)) +
geom_line() +
xlab("")
p
data2testrolling <- state_unemp_entropy_timseries(data,"NY")
# or for the whole dataset
#data2testrolling <- unemp_entropy_timseries(data)
data2testrolling$rollcorr <- roll_cor(data2testrolling$avg_unemployment,data2testrolling$Entropy,width = 24)
#allso rolling std
data2testrolling$std_entropy <- roll_sd(data2testrolling$Entropy,width=24)
#also rolling avg
data2testrolling$mean_entropy <- roll_mean(data2testrolling$Entropy,width=24)
# also median
data2testrolling$median_entropy <- roll_median(data2testrolling$Entropy,width=24)
#plot(rollcorrdata,xlab="time",ylab="correlation",at=data2testrolling$datetf2,labels=data2testrolling$datetf2)
# Most basic plot
p <- ggplot(data2testrolling, aes(x=datetf2, y=mean_entropy)) +
geom_line() +
xlab("")
p
denom_affil_timeseries <- function(data, tarDenom){
d <- data[data$Denom==tarDenom,]
dsub <- aggregate( Affiliation ~ month + year , d , mean )
return(dsub)
}
denom_affil_entropy_timseries <- function(data,tarDenom){
entr <- denom_entropy_timeseries(data,tarDenom)
affil <- denom_affil_timeseries(data,tarDenom)
affil_entropy_data <- affil %>% right_join(entr, by=c("year", "month"))
affil_entropy_data$datetf2 <- paste(affil_entropy_data$month, affil_entropy_data$year,sep="-")
affil_entropy_data$datetf2 <- as.yearmon(affil_entropy_data$datetf2, "%m-%Y")
return(unemp_entropy_data)
}
denom_affil_entropy_timseries(data,123)
denom_affil_timeseries <- function(data, tarDenom){
d <- data[data$Denom==tarDenom,]
dsub <- aggregate( affiliation ~ month + year , d , mean )
return(dsub)
}
denom_affil_entropy_timseries(data,123)
denom_affil_entropy_timseries <- function(data,tarDenom){
entr <- denom_entropy_timeseries(data,tarDenom)
affil <- denom_affil_timeseries(data,tarDenom)
affil_entropy_data <- affil %>% right_join(entr, by=c("year", "month"))
affil_entropy_data$datetf2 <- paste(affil_entropy_data$month, affil_entropy_data$year,sep="-")
affil_entropy_data$datetf2 <- as.yearmon(affil_entropy_data$datetf2, "%m-%Y")
return(unemp_entropy_data)
}
denom_affil_entropy_timseries(data,123)
entr <- denom_entropy_timeseries(data,tarDenom)
